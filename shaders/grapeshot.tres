[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://bu7oibr44wj7g"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n2q0m"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5syey"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(2.965, -0.485, 0.825, 0.715)]
expanded_output_ports = [0]
op_type = 2
operator = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// VectorOp:3
	vec4 n_in3p1 = vec4(2.96500, -0.48500, 0.82500, 0.71500);
	vec4 n_out3p0 = n_out2p0 - n_in3p1;
	float n_out3p4 = n_out3p0.a;


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out3p4;


}
"
graph_offset = Vector2(112.969, -95.8867)
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(1040, 120)
nodes/fragment/0/position = Vector2(1740, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_n2q0m")
nodes/fragment/2/position = Vector2(800, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_5syey")
nodes/fragment/3/position = Vector2(1200, 60)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 4, 0, 1, 3, 0, 0, 0)
